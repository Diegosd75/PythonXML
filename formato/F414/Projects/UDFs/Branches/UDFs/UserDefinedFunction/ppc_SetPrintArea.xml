<object stamp="219ad35e-89b7-494d-9058-cd4775feffe5_1639402297324" type="UserDefinedFunction" version="2.0">
    <property name="objectId" value="9a035d67-9534-4fe0-a373-197ba3a3db6f" valueType="string"/>
    <property name="branchId" value="UDFs" valueType="string"/>
    <property name="name" value="ppc_SetPrintArea" valueType="string"/>
    <property name="description" value="2021.12.10" valueType="string"/>
    <property name="arguments" valueType="table">
        <object type="UserDefinedFunction:argument" version="1.0">
            <property name="name" value="SPA_sheet" valueType="string"/>
            <property name="description" value="" valueType="string"/>
        </object>
        <object type="UserDefinedFunction:argument" version="1.0">
            <property name="name" value="SPA_object" valueType="string"/>
            <property name="description" value="" valueType="string"/>
        </object>
        <object type="UserDefinedFunction:argument" version="1.0">
            <property name="name" value="SPA_count" valueType="string"/>
            <property name="description" value="" valueType="string"/>
        </object>
        <object type="UserDefinedFunction:argument" version="1.0">
            <property name="name" value="SPA_startRange" valueType="string"/>
            <property name="description" value="" valueType="string"/>
        </object>
        <object type="UserDefinedFunction:argument" version="1.0">
            <property name="name" value="SPA_stopRange" valueType="string"/>
            <property name="description" value="" valueType="string"/>
        </object>
        <object type="UserDefinedFunction:argument" version="1.0">
            <property name="name" value="SPA_mode" valueType="string"/>
            <property name="description" value="" valueType="string"/>
        </object>
    </property>
    <property name="body" valueType="object">
        <object type="ASLExpression" version="1.0">
            <property name="expression" valueType="table">
                <object type="ASLExpression:part" version="1.0">
                    <property name="expression" value="&lt;!--&#xa;Copyright by AXIOM SL, Igor Kirilyuk&#xa;Version of 2021.12.10&#xa;Building a dynamic report (multiplication of rows)&#xa;Input variables:&#xa;SPA_sheet - &#xa;SPA_object -&#xa;SPA_count - &#xa;SPA_startRange - &#xa;SPA_stopRange - &#xa;SPA_mode - 1-5 - table mode; 255 - cleaning print area;&#xa;-->&#xa;trace(&quot;#!#!#! ppc_SetPrintArea. Started #!#!#!&quot;);&#xa;trace(&quot;#!#!#! ppc_SetPrintArea. Copyright by AXIOM SL, Igor Kirilyuk, 2021.12.10 #!#!#!&quot;);&#xa;&#xa;var SPA_startDate = new(&quot;java.util.Date&quot;);&#xa;&#xa;&lt;try>&#xa;&lt;!-- Should be removed in v10 Start&#xa;&#x9;var SPA_SheetSetup = editor.getSpreadSheetPanel().getReport().getSheetSetup(SPA_sheet);&#xa;&#x9;&lt;if> (SPA_SheetSetup != null) and (SPA_SheetSetup.printArea != null)&#xa;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Set print area for sheet &quot; + SPA_sheet + &quot; ... #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&lt;case>&#xa;&#x9;&#x9;&#x9;&#x9;(SPA_mode == 1) or (SPA_mode == 4) or (SPA_mode == 5) &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;if> SPA_SheetSetup.printArea.height &amp;gt;= SPA_startRange&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Update position last row print area from &quot; + SPA_SheetSetup.printArea.height + &quot; to &quot; + (SPA_SheetSetup.printArea.height + SPA_count * (SPA_stopRange - SPA_startRange + 1)) + &quot; #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SPA_SheetSetup.printArea = new(&quot;java.awt.Rectangle&quot;, SPA_SheetSetup.printArea.x, SPA_SheetSetup.printArea.y, SPA_SheetSetup.printArea.width, SPA_SheetSetup.printArea.height + SPA_count * (SPA_stopRange - SPA_startRange + 1));&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/if>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;(SPA_mode == 2) or (SPA_mode == 3)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;if> SPA_SheetSetup.printArea.width &amp;gt;= SPA_startRange&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Update position last column print area from &quot; + SPA_SheetSetup.printArea.width + &quot; to &quot; + (SPA_SheetSetup.printArea.width + SPA_count * (SPA_stopRange - SPA_startRange + 1)) + &quot; #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SPA_SheetSetup.printArea = new(&quot;java.awt.Rectangle&quot;, SPA_SheetSetup.printArea.x, SPA_SheetSetup.printArea.y, SPA_SheetSetup.printArea.width + SPA_count * (SPA_stopRange - SPA_startRange + 1), SPA_SheetSetup.printArea.height);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/if>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;SPA_mode == 255&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Cleaning print area #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SPA_SheetSetup.printArea = null;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&lt;/case>&#xa;&#x9;&#x9;&lt;/then>&#xa;&#x9;&lt;/if>&#xa;&#x9;&#xa;&#x9;&lt;if> (SPA_SheetSetup != null) and (SPA_SheetSetup.rowPageBreaks != null)&#xa;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&lt;case>&#xa;&#x9;&#x9;&#x9;&#x9;(SPA_mode == 1) or (SPA_mode == 4) or (SPA_mode == 5) &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Set page breaks for sheet &quot; + SPA_sheet + &quot; ... #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;for> var indexRowPageBreaks = 0 &lt;comma/> indexRowPageBreaks &amp;lt; SPA_SheetSetup.rowPageBreaks.size() &lt;comma/> indexRowPageBreaks++&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var SPA_rowPageBreak = SPA_SheetSetup.rowPageBreaks.get(indexRowPageBreaks);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;if> (SPA_rowPageBreak != null) and (SPA_rowPageBreak &amp;gt; SPA_stopRange)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Update position page breaks from &quot; + SPA_rowPageBreak + &quot; to &quot; + (SPA_rowPageBreak + SPA_count * (SPA_stopRange - SPA_startRange + 1)) + &quot; #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SPA_SheetSetup.rowPageBreaks.set(indexRowPageBreaks, SPA_rowPageBreak + SPA_count * (SPA_stopRange - SPA_startRange + 1));&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/if>&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/for>&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;case>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(SPA_mode == 4) or (SPA_mode == 5) &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var SPA_rowPageBreaksSize = SPA_SheetSetup.rowPageBreaks.size();&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;for> var indexRowPageBreaks = 0 &lt;comma/> indexRowPageBreaks &amp;lt; SPA_rowPageBreaksSize &lt;comma/> indexRowPageBreaks++&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var SPA_rowPageBreak = SPA_SheetSetup.rowPageBreaks.get(indexRowPageBreaks);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;if> (SPA_rowPageBreak != null) and (SPA_rowPageBreak &amp;gt;= SPA_startRange) and (SPA_rowPageBreak &amp;lt;= SPA_stopRange)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;for> var index = 0 &lt;comma/> index &amp;lt; SPA_count &lt;comma/> index++&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Added new position page breaks to &quot; + (SPA_startRange + (SPA_stopRange - SPA_startRange + 1) * (index + 1) + (SPA_rowPageBreak - SPA_startRange)) + &quot; #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SPA_SheetSetup.rowPageBreaks.add(SPA_startRange + (SPA_stopRange - SPA_startRange + 1) * (index + 1) + (SPA_rowPageBreak - SPA_startRange));&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/for>&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/if>&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/for>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/case>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&lt;/case>&#xa;&#x9;&#x9;&lt;/then>&#xa;&#x9;&lt;/if>&#xa;Should be removed in v10 Finish -->&#xa;&lt;!-- For v10 Start -->&#xa;&#x9;&lt;if> SPA_object.propertyIsSet(&quot;printScenarios&quot;)&#xa;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;var SPA_printScenarios = SPA_object.getTable(&quot;printScenarios&quot;);&#xa;&#x9;&#x9;&#x9;&lt;for> var indexPrintScenarios = 0 &lt;comma/> indexPrintScenarios &amp;lt; SPA_printScenarios.size() &lt;comma/> indexPrintScenarios++&#xa;&#x9;&#x9;&#x9;&#x9;&lt;do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;var SPA_scenarioSheetSettings = SPA_printScenarios.get(indexPrintScenarios).getTable(&quot;sheetSettings&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;for> var indexScenarioSheetSettings = 0 &lt;comma/> indexScenarioSheetSettings &amp;lt; SPA_scenarioSheetSettings.size() &lt;comma/> indexScenarioSheetSettings++&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var SPA_scenarioSheetSettingsRow = SPA_scenarioSheetSettings.get(indexScenarioSheetSettings);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;if> SPA_scenarioSheetSettingsRow.getString(&quot;name&quot;).equals(SPA_sheet) and SPA_scenarioSheetSettingsRow.getBoolean(&quot;isPrinted&quot;)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;if> SPA_scenarioSheetSettingsRow.propertyIsSet(&quot;printArea&quot;)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Set print area for sheet &quot; + SPA_sheet + &quot; ... #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;case>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(SPA_mode == 1) or (SPA_mode == 4) or (SPA_mode == 5) &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var SPA_nRows = SPA_scenarioSheetSettingsRow.getObject(&quot;printArea&quot;).getInteger(&quot;nRows&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;if> SPA_nRows &amp;gt;= SPA_startRange&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Update position last row print area from &quot; + SPA_nRows + &quot; to &quot; + (SPA_nRows + SPA_count * (SPA_stopRange - SPA_startRange + 1)) + &quot; #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SPA_scenarioSheetSettingsRow.getObject(&quot;printArea&quot;).setProperty(&quot;nRows&quot;, SPA_nRows + SPA_count * (SPA_stopRange - SPA_startRange + 1));&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/if>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(SPA_mode == 2) or (SPA_mode == 3)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var SPA_nCols = SPA_scenarioSheetSettingsRow.getObject(&quot;printArea&quot;).getInteger(&quot;nCols&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;if> SPA_nCols &amp;gt;= SPA_startRange&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Update position last column print area from &quot; + SPA_nCols + &quot; to &quot; + (SPA_nCols + SPA_count * (SPA_stopRange - SPA_startRange + 1)) + &quot; #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SPA_scenarioSheetSettingsRow.getObject(&quot;printArea&quot;).setProperty(&quot;nCols&quot;, SPA_nCols + SPA_count * (SPA_stopRange - SPA_startRange + 1));&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/if>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SPA_mode == 255&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Cleaning print area #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SPA_scenarioSheetSettingsRow.setProperty(&quot;isPrinted&quot;, false);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/case>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/if>&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;if> SPA_scenarioSheetSettingsRow.propertyIsSet(&quot;rowPageBreak&quot;)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;case>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(SPA_mode == 1) or (SPA_mode == 4) or (SPA_mode == 5) &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Set page breaks for sheet &quot; + SPA_sheet + &quot; ... #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var SPA_rowPageBreaks = SPA_scenarioSheetSettingsRow.getTable(&quot;rowPageBreak&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;for> var indexRowPageBreaks = 0 &lt;comma/> indexRowPageBreaks &amp;lt; SPA_rowPageBreaks.size() &lt;comma/> indexRowPageBreaks++&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var SPA_rowPageBreaksValue = SPA_rowPageBreaks.get(indexRowPageBreaks).getInteger(&quot;value&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;if> SPA_rowPageBreaksValue &amp;gt; SPA_stopRange&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Update position page breaks from &quot; + SPA_rowPageBreaksValue + &quot; to &quot; + (SPA_rowPageBreaksValue + SPA_count * (SPA_stopRange - SPA_startRange + 1)) + &quot; #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;SPA_rowPageBreaks.get(indexRowPageBreaks).setProperty(&quot;value&quot;, SPA_rowPageBreaksValue + SPA_count * (SPA_stopRange - SPA_startRange + 1));&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/if>&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/for>&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;case>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;(SPA_mode == 4) or (SPA_mode == 5) &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var SPA_rowPageBreaksSize = SPA_rowPageBreaks.size();&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;for> var indexRowPageBreaks = 0 &lt;comma/> indexRowPageBreaks &amp;lt; SPA_rowPageBreaksSize &lt;comma/> indexRowPageBreaks++&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var SPA_rowPageBreaksValue = SPA_rowPageBreaks.get(indexRowPageBreaks).getInteger(&quot;value&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;if> (SPA_rowPageBreaksValue &amp;gt;= SPA_startRange) and (SPA_rowPageBreaksValue &amp;lt;= SPA_stopRange)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;for> var index = 0 &lt;comma/> index &amp;lt; SPA_count &lt;comma/> index++&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;var _rowPageBreaks = SPA_rowPageBreaks.addRow(&quot;FreeFormReport:singleIntValue&quot;, axiomEnvironment);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Added new position page breaks to &quot; + (SPA_startRange + (SPA_stopRange - SPA_startRange + 1) * (index + 1) + (SPA_rowPageBreaksValue - SPA_startRange)) +  &quot; #!#!#!&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;_rowPageBreaks.setProperty(&quot;value&quot;, SPA_startRange + (SPA_stopRange - SPA_startRange + 1) * (index + 1) + (SPA_rowPageBreaksValue - SPA_startRange));&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/for>&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/if>&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/for>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/case>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/case>&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/if>&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/if>&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/do>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/for>&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&lt;/do>&#xa;&#x9;&#x9;&#x9;&lt;/for>&#x9;&#xa;&#x9;&#x9;&lt;/then>&#xa;&#x9;&lt;/if>&#x9;&#xa;&lt;!-- For v10 Finish -->&#xa;&lt;catch> var ex &lt;/catch>&#xa;&#x9;trace(&quot;#!#!#! ppc_SetPrintArea. Error set print area for sheet &quot; + SPA_sheet + &quot; #!#!#!&quot;);&#xa;&#x9;trace(ex.toString());&#xa;&lt;/try>&#x9;&#xa;trace(&quot;#!#!#! ppc_SetPrintArea. &quot; + " valueType="string"/>
                </object>
                <object type="ASLExpression:udfReference" version="1.0">
                    <property name="value" valueType="url">UserDefinedFunction["ppc_RunTime"{01bdef00-6989-424b-84f9-c81ca2885e47}]</property>
                </object>
                <object type="ASLExpression:part" version="1.0">
                    <property name="expression" value="(SPA_startDate, new(&quot;java.util.Date&quot;)) + &quot; #!#!#!&quot;);&#xa;trace(&quot;#!#!#! ppc_SetPrintArea. Finished #!#!#!&quot;);" valueType="string"/>
                </object>
            </property>
        </object>
    </property>
</object>