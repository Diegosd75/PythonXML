<object stamp="d798bec0-61ec-4030-8c28-835580d5a761_1631719917580" type="UserDefinedFunction" version="2.0">
    <property name="objectId" value="e665d99d-8d53-4952-b023-65d92c42ee4e" valueType="string"/>
    <property name="branchId" value="UDFs" valueType="string"/>
    <property name="name" value="glbl_s91_resolveBranchObjectNames" valueType="string"/>
    <property name="description" value="Resolving branch, project, object name by project, barnch, object name (may be with deps) and TIME_TAG (if Soft-Deps)" valueType="string"/>
    <property name="arguments" valueType="table">
        <object type="UserDefinedFunction:argument" version="1.0">
            <property name="name" value="var_S91RBON_project_name" valueType="string"/>
            <property name="description" value="Project name" valueType="string"/>
        </object>
        <object type="UserDefinedFunction:argument" version="1.0">
            <property name="name" value="var_S91RBON_branch_name" valueType="string"/>
            <property name="description" value="Branch name" valueType="string"/>
        </object>
        <object type="UserDefinedFunction:argument" version="1.0">
            <property name="name" value="var_S91RBON_object_name" valueType="string"/>
            <property name="description" value="Object name. May be speicified in format dep1:..depN:object_type[object_name]" valueType="string"/>
        </object>
    </property>
    <property name="body" valueType="object">
        <object type="ASLExpression" version="1.0">
            <property name="expression" valueType="table">
                <object type="ASLExpression:part" version="1.0">
                    <property name="expression" value="&lt;!--&#xa;&#x9;https://axiomsl.us/jira/browse/SCRIPT-91&#xa;&#xa;&#x9;glbl_s91_resolveBranchObjectNames with prefix: S91RBON_&#xa;&#xa;&#x9;Oleksiy Frizyuk 2021.01.03&#xa;&#x9;&#x9;First release.&#xa;&#x9;Oleksiy Frizyuk 2021.09.15&#xa;&#x9;&#x9;Fixed dependency name detection&#xa;&#xa;&#x9;Resolving branch, project, object name by project, barnch, object name (may be with deps) and TIME_TAG (if Soft-Deps).&#xa;&#x9;Return HashMap with &quot;projectName&quot;, &quot;branchName&quot; and &quot;objectName&quot; elements.&#xa;&#xa;&#x9;Input variables:&#xa;&#x9;var_S91RBON_project_name - Project name&#xa;&#x9;var_S91RBON_branch_name - Branch name&#xa;&#x9;var_S91RBON_object_name - Object name. May be specified in format dep1:..depN:object_type[object_name]&#xa;-->&#xa;trace(&quot;#!#!#! glbl_s91_resolveBranchObjectNames: Started&quot;);&#xa;trace(&quot;#!#!#! S91RBON: var_S91RBON_project_name[&quot; + var_S91RBON_project_name + &quot;] var_S91RBON_branch_name[&quot; + var_S91RBON_branch_name + &quot;] var_S91RBON_object_name[&quot; + var_S91RBON_object_name + &quot;]&quot;);&#xa;&#xa;var S91RBON_object_name := var_S91RBON_object_name.trim();&#xa;var S91RBON_depNames := S91RBON_object_name.split(&quot;\[&quot;).get(0);&#xa;&#xa;&lt;if> S91RBON_depNames.lastIndexOf(&quot;:&quot;) &amp;gt; 0&#xa;&#x9;&lt;then>&#xa;&#x9;&#x9;S91RBON_object_name := S91RBON_object_name.substring(S91RBON_depNames.lastIndexOf(&quot;:&quot;) + 1, S91RBON_object_name.length());&#xa;&#x9;&#x9;S91RBON_depNames := S91RBON_depNames.substring(0, S91RBON_depNames.lastIndexOf(&quot;:&quot;));&#xa;&#x9;&lt;/then>&#xa;&#x9;&lt;else>&#xa;&#x9;&#x9;S91RBON_depNames := &quot;&quot;;&#xa;&#x9;&lt;/else>&#xa;&lt;/if>&#xa;&#xa;var S91RBON_project_name := var_S91RBON_project_name.trim();&#xa;var S91RBON_branch_name := var_S91RBON_branch_name.trim();&#xa;&lt;if> NOT S91RBON_depNames.isEmpty()&#xa;&#x9;&lt;then>&#xa;&#x9;&#x9;var S91RBON_depList := S91RBON_depNames.split(&quot;:&quot;);&#xa;&#x9;&#x9;&lt;for> var S91RBON_depList_Cnt := 0 &lt;comma/> S91RBON_depList_Cnt &amp;lt; S91RBON_depList.size() &lt;comma/> S91RBON_depList_Cnt++&#xa;&#x9;&#x9;&#x9;&lt;do>&#xa;&#x9;&#x9;&#x9;&#x9;var S91RBON_depList_Row := S91RBON_depList.get(S91RBON_depList_Cnt).trim();&#xa;&#x9;&#x9;&#x9;&#x9;var S91RBON_currBranchObj := axiomObjectManager.locate(ObjectID.createNameId(&quot;Branch&quot;, null, S91RBON_project_name + &quot;!&quot; + S91RBON_branch_name), axiomEnvironment);&#xa;&#x9;&#x9;&#x9;&#x9;var S91RBON_currBranchDepList := axiomObjectManager.locate(ObjectID.createId(&quot;BranchDependencies&quot;, S91RBON_currBranchObj.getId(), &quot;BranchDependencies&quot;), axiomEnvironment.setOneProperty(class(&quot;com.axiomsl.framework.api.server.FrameworkAxiomEnvironmentConstants&quot;).ALLOW_LOCATE_INVALID, true)).getTable(&quot;dependencies&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;var S91RBON_currBranchDepList_Row := S91RBON_currBranchDepList.locateByPropertyIfExists(S91RBON_depList_Row, &quot;name&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&lt;if> S91RBON_currBranchDepList_Row == null&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;then>&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! S91RBON: Dependency [&quot; + S91RBON_depList_Row + &quot;] does not exists in Branch[&quot; + S91RBON_project_name + &quot;!&quot; + S91RBON_branch_name + &quot;]&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;error(&quot;#!#!#! S91RBON: Dependency [&quot; + S91RBON_depList_Row + &quot;] does not exists in Branch[&quot; + S91RBON_project_name + &quot;!&quot; + S91RBON_branch_name + &quot;]&quot;);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&lt;/then>&#xa;&#x9;&#x9;&#x9;&#x9;&lt;/if>&#xa;&#x9;&#x9;&#x9;&#x9;var S91RBON_depBranchDbID := axiomObjectManager.getResolver().resolve(S91RBON_currBranchDepList_Row.getReference(&quot;branch&quot;).getTargetObjectID());&#xa;&#x9;&#x9;&#x9;&#x9;var S91RBON_depBranchName := axiomObjectManager.getResolver().getName(S91RBON_depBranchDbID);&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;trace(&quot;#!#!#! S91RBON: S91RBON_depBranchName[&quot; + S91RBON_depBranchName + &quot;]&quot;);&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;S91RBON_project_name := S91RBON_depBranchName.split(&quot;!&quot;).get(0);&#xa;&#x9;&#x9;&#x9;&#x9;S91RBON_branch_name := S91RBON_depBranchName.split(&quot;!&quot;).get(1);&#xa;&#x9;&#x9;&#x9;&lt;/do>&#xa;&#x9;&#x9;&lt;/for>&#xa;&#x9;&lt;/then>&#xa;&lt;/if>&#xa;var S91RBON_result := Map();&#xa;S91RBON_result.put(&quot;projectName&quot;, S91RBON_project_name);&#xa;S91RBON_result.put(&quot;branchName&quot;, S91RBON_branch_name);&#xa;S91RBON_result.put(&quot;objectName&quot;, S91RBON_object_name);&#xa;&#xa;trace(&quot;#!#!#! S91RBON: Project[&quot; + S91RBON_result.get(&quot;projectName&quot;) + &quot;], Branch[&quot; + S91RBON_result.get(&quot;branchName&quot;) + &quot;], Object[&quot; + S91RBON_result.get(&quot;objectName&quot;) + &quot;]&quot;);&#xa;&#xa;trace(&quot;#!#!#! glbl_s91_resolveBranchObjectNames: Finished&quot;);&#xa;;S91RBON_result" valueType="string"/>
                </object>
            </property>
        </object>
    </property>
</object>